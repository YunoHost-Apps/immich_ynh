#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# CHECK HARDWARE REQUIREMENTS
#=================================================
ynh_script_progression "Checking hardware requirements..."

myynh_check_hardware

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

source_dir="$install_dir/source"
ynh_setup_source --source_id="main" --dest_dir="$source_dir"

#=================================================
# INSTALL NODEJS
#=================================================
ynh_script_progression "Installing nodejs..."

nodejs_version=$(cat "$source_dir/server/.nvmrc" | cut -d '.' -f1) # 22
ynh_nodejs_install

#=================================================
# INSTALL PACKAGES
#=================================================
ynh_script_progression "Installing additionnal packages (if needed)..."

myynh_install_postgresql_packages

#=================================================
# CREATE A POSTGRESQL DATABASE
#=================================================
ynh_script_progression "Creating a PostgreSQL database (if needed)..."

if [[ $YNH_DEBIAN_VERSION == "bookworm" ]]
then
	myynh_create_psql_cluster
	myynh_create_psql_db
	myynh_set_default_psql_cluster_to_debian_default
fi

myynh_update_psql_db

#=================================================
# ADD SWAP IF NEEDED
#=================================================
ynh_script_progression "Temporary adding additional swap if needed..."

myynh_add_swap

#=================================================
# MAKE INSTALL
#=================================================
ynh_script_progression "Making install..."

myynh_install_immich

#=================================================
# REMOVE TEMPORARY SWAP IF ADDED
#=================================================
ynh_script_progression "Remove temporary swap if added..."

ynh_del_swap_fixed

#=================================================
# APP INITIAL CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration files..."

ynh_config_add --template="env" --destination="$install_dir/env"
mkdir --parents "$data_dir/backups"
ynh_config_add --template="restore_immich_db_backup.sh" --destination="$data_dir/backups/restore_immich_db_backup.sh"

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

ynh_config_add_nginx

ynh_config_add_systemd --service="$app-server" --template="$app-server.service"
ynh_config_add_systemd --service="$app-machine-learning" --template="$app-machine-learning.service"

yunohost service add "$app-server" --description="Immich Server" --log="/var/log/$app/$app-server.log"
yunohost service add "$app-machine-learning" --description="Immich Machine Learning" --log="/var/log/$app/$app-machine-learning.log"

ynh_multimedia_build_main_dir
ynh_multimedia_addaccess "$app"

# Use logrotate to manage application logfile(s)
ynh_config_add_logrotate

# Create a dedicated Fail2Ban config
ynh_config_add_fail2ban --logpath="/var/log/$app/$app-server.log" --failregex="$failregex"

#=================================================
# SET FILE OWNERSHIP / PERMISSIONS
#=================================================

myynh_set_permissions

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service="$app-machine-learning" --action="start" --wait_until="Application startup complete" --log_path="/var/log/$app/$app-machine-learning.log"
ynh_systemctl --service="$app-server" --action="start" --wait_until="Immich Server is listening" --log_path="/var/log/$app/$app-server.log" --timeout=900

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
